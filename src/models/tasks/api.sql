CREATE PROCEDURE `GET_TASKS`(IN `ROOM_ID` INT UNSIGNED
) BEGIN
	SELECT * FROM `TASKS` WHERE `ROOM_ID` = `ROOM_ID`;
END;

CREATE PROCEDURE `GET_TASKS_PROGRESS`(IN `ROOM_ID`
INT UNSIGNED) BEGIN
	SELECT
	    `GROUP_ID`,
	    COUNT(`ID`) as `TOTAL_COUNT`,
	    COUNT(
	        IF(`STATUS` = 'DONE', `ID`, NULL)
	    ) as `TOTAL_COUNT`
	FROM `TASKS`
	WHERE `ROOM_ID` = `ROOM_ID`
	GROUP BY `GROUP_ID`;
END;

CREATE PROCEDURE `ADD_TASK`(IN `ROOM_ID` INT UNSIGNED
, IN `GROUP_ID`INT UNSIGNED, IN `AUTHOR_ID` INT UNSIGNED
, IN `CONTENT` VARCHAR(128), IN `STATUS` ENUM('READY'
, 'IN PROGRESS', 'NEED REVIEW', 'DONE')) BEGIN
	INSERT INTO
	    `TASKS`(
	        `ROOM_ID`,
	        `GROUP_ID`,
	        `AUTHOR_ID`,
	        `CONTENT`,
	        `STATUS`
	    )
	VALUES (
	        `ROOM_ID`,
	        `GROUP_ID`,
	        `AUTHOR_ID`,
	        `CONTENT`,
	        `STATUS`
	    );
END;

CREATE PROCEDURE `UPDATE_TASK_STATUS`(IN `TASK_ID`
INT UNSIGNED, IN `STATUS` ENUM('READY', 'IN PROGRESS'
, 'NEED REVIEW', 'DONE')) BEGIN
	UPDATE `TASKS` SET `STATUS` = `STATUS` WHERE `ID` = `TASK_ID`;
END;

CREATE PROCEDURE `UPDATE_TASK_CONTENT`(IN `TASK_ID`
INT UNSIGNED, IN `CONTENT` VARCHAR(128)) BEGIN
	UPDATE `TASKS` SET `CONTENT` = `CONTENT` WHERE `ID` = `TASK_ID`;
END;

CREATE PROCEDURE `UPDATE_TASK_GROUP`(IN `TASK_ID` INT
UNSIGNED, IN `GROUP_ID` INT UNSIGNED) BEGIN
	UPDATE `TASKS` SET `GROUP_ID` = `GROUP_ID` WHERE `ID` = `TASK_ID`;
END;

CREATE PROCEDURE `REMOVE_TASK`(IN `TASK_ID` INT UNSIGNED
) BEGIN
	DELETE FROM `TASKS` WHERE `ID` = `TASK_ID`;
END;
